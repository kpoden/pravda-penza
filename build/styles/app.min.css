:root{--c-font: #1A1A1A;--c-blue: #2F80ED;--c-grey: #777878}@font-face{font-family:"HelveticaNeueCyr";src:url(../fonts/HelveticaNeueCyr-Light.ttf) format("truetype");font-weight:300}@font-face{font-family:"HelveticaNeueCyr";src:url(../fonts/HelveticaNeueCyr-Roman.ttf) format("truetype");font-weight:400}@font-face{font-family:"Inter";src:url(../fonts/Inter-Regular.ttf) format("truetype");font-weight:400}.section-title{font-family:HelveticaNeueCyr;font-size:64px;font-style:normal;font-weight:400;line-height:100%;max-width:1920px;padding:150px 0 70px}@media (max-width:1000px){.section-title{font-size:40px}}@media (max-width:800px){.section-title{padding:70px 0 30px;font-weight:400;line-height:110%}}@media (max-width:600px){.section-title{font-size:20px}}.section-title.section-title--wrapped{margin:150px auto 70px}@media (max-width:1000px){.section-title.section-title--wrapped{padding:0 50px}}@media (max-width:600px){.section-title.section-title--wrapped{padding:0 20px}}._locked{overflow:hidden}.bolder{font-weight:bolder}.hidden{display:none!important}.red{color:red}.yellow{color:#f9cc49}.unvis{opacity:0;visibility:hidden}.eyes,.eyes svg{position:absolute}.eyes{z-index:10;right:26px;top:18px;width:22px;height:22px;cursor:pointer}@media (max-width:750px){.eyes{top:13px}}.eyes svg{-webkit-transition:.2s;transition:.2s}.eyes .eye{opacity:1}.eyes .eye-y,.eyes.active .eye{opacity:0}.eyes.active .eye-y{opacity:1}._error-txt{color:#c00;font-size:12px;font-weight:500;display:block;padding-top:5px}._error-input{border:1.5px solid #c00!important}.banner{min-height:50px;border:.5px solid #131313}.banner img{width:100%}*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus{outline:0}.container,body{position:relative}body{font-family:HelveticaNeueCyr,Helvetica,Arial,sans-serif;color:var(--c-font);font-weight:400}._lock,.container{overflow:hidden}.container{width:100%;height:100%;margin:0 auto;min-width:375px;padding-top:20px}img{max-width:100%}ul{list-style:none;margin:0;padding:0}a{text-decoration:none;color:inherit;-webkit-transition:.2s;transition:.2s;cursor:pointer}a:hover{color:var(--c-blue)}a:active{color:#002cbb}.wrapper{max-width:960px;margin:0 auto;padding:0 10px}@media (max-width:1100px){.wrapper{padding:0 50px}}@media (max-width:850px){.wrapper{padding:0 20px}}.logos-slider .swiper-free-mode>.swiper-wrapper{-webkit-transition-timing-function:linear;transition-timing-function:linear}.header__logo{padding-bottom:10px}.header__burger,.header__main{height:38px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__main{display:-webkit-box;display:-ms-flexbox;display:flex;gap:27px;background:#f2f2f2;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__burger{width:38px;padding:7px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background:#cf0811;cursor:pointer}.header__burger,.header__info,.header__info-item{display:-webkit-box;display:-ms-flexbox;display:flex}.header__info{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}.header__info-item{-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:2px}.header__info-item-icon{-ms-flex-negative:0;flex-shrink:0;color:#131313;font-family:Inter;font-size:8px;font-style:normal;font-weight:400;line-height:8px;border-radius:34.29px;border:.5px solid #131313;width:16px;height:16px;position:relative}.header__info-item-icon span,.header__info-item-icon svg{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.header__info-item-text,.news__filter span{font-family:Inter;font-size:11px;font-weight:400;line-height:normal}.header__search{display:-webkit-box;display:-ms-flexbox;display:flex;width:38px;height:38px;padding:7px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background:#9c9c9c;cursor:pointer}.main__header,.secondary__header h2{padding-top:20px;padding-bottom:20px;color:#131313;font-family:Roboto;font-size:20px;font-style:normal;font-weight:700;line-height:normal;letter-spacing:-.5px}.news__item,.news__list{display:-webkit-box;display:-ms-flexbox;display:flex}.news__list{-ms-flex-wrap:wrap;flex-wrap:wrap;padding-bottom:50px;gap:20px}.news__item{gap:19px}.news__info,.news__item.vert-news{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.news__item.big-news{width:100%}.news__item.small-news{width:calc(50% - 20px)}.news__item.hor-news .news__img,.news__item.hor-news .news__info{-webkit-box-flex:1;-ms-flex:1;flex:1}.news__img img{-o-object-fit:cover;object-fit:cover;width:100%;height:100%}.news__info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.news__date,.news__title{color:#9c9c9c;font-family:Roboto;font-size:10px;font-style:normal;font-weight:400;line-height:normal;letter-spacing:-.25px;padding-bottom:5px}.news__title{color:#131313;font-size:14px;font-weight:500;letter-spacing:-.35px}.news__link,.news__text{font-style:normal;font-weight:400;line-height:normal}.news__text{color:rgba(0,0,0,.7);padding-bottom:5px;font-family:Inter;font-size:12px}.news__link{color:#cf0811;font-family:Roboto;font-size:14px;letter-spacing:-.35px;-webkit-text-decoration-line:underline;text-decoration-line:underline}.secondary__header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.news__slider{height:240px;margin-bottom:66px}.news__slider.swiper{overflow:visible}.news__slider-item{padding:25px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:end;-ms-flex-align:end;align-items:end}.news__slider .news__img{position:absolute;top:0;left:0;max-height:100%;overflow:hidden;width:100%}.news__slider .news__img-overflow{background:rgba(0,0,0,.4);width:100%;height:100%;position:absolute;top:0;left:0}.news__slider .news__info{position:relative;z-index:100}.news__filter.active-filter span,.news__slider .news__date,.news__slider .news__link,.news__slider .news__text,.news__slider .news__title{color:#fff}.news__slider .swiper-pagination{bottom:-20px}.news__slider .swiper-pagination-bullet{background:#9c9c9c}.news__slider .swiper-pagination-bullet-active{background:#131313}.news__filters{padding-bottom:20px}.news__filter{display:-webkit-box;display:-ms-flexbox;display:flex;padding:6px 20px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:10px;border-radius:100px;background:#f2f2f2}.news__filter.active-filter{background:#cf0811}.news__filter span{color:rgba(0,0,0,.7);font-size:12px;font-style:normal}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
